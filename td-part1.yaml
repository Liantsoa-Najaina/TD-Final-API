openapi: 3.0.3
info:
  title: Football Competition Management
  description:  Football competitions, teams, and players management.
  version: 1.0.0

servers:
  - url: http://localhost.std23056.com
    description: Main production server

tags:
  - name: Competitions
    description: Football competitions
  - name: Teams
    description: Football teams
  - name: Players
    description: Football players

paths:
  /competitions:
    post:
      tags:
        - Competitions
      summary: Competition creation
      operationId: createCompetition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompetitionCreate'
      responses:
        '201':
          description: Competition created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Competition'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Competitions
      summary: Get a list of competitions
      operationId: getCompetitions
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            example: 1
          required: true
          description: The page number for pagination.
        - in: query
          name: pageSize
          schema:
            type: integer
            example: 10
          required: true
          description: The number of records per page.
        - in: query
          name: sortBy
          schema:
            type: string
            enum: [name, location]
          required: false
          description: Sort competitions by a specified field.
      responses:
        '200':
          description: A paginated list of competitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompetitions'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /teams:
    post:
      tags:
        - Teams
      summary: Create a new team
      operationId: createTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamCreate'
      responses:
        '201':
          description: Team created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Teams
      summary: Get a list of teams
      operationId: getTeams
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            example: 1
          required: true
          description: The page number for pagination.
        - in: query
          name: pageSize
          schema:
            type: integer
            example: 10
          required: true
          description: The number of records per page.
        - in: query
          name: teamName
          schema:
            type: string
          required: false
          description: Filter teams by name.
        - in: query
          name: country
          schema:
            type: string
          required: false
          description: Filter teams by country.
      responses:
        '200':
          description: A paginated list of teams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeams'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /teams/{teamId}/competitions:
    put:
      tags:
        - Teams
        - Competitions
      summary: Associate a team with competitions
      operationId: associateTeamWithCompetitions
      parameters:
        - in: path
          name: teamId
          schema:
            type: integer
          required: true
          description: The ID of the team.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                competitionIds:
                  type: array
                  items:
                    type: integer
              required:
                - competitionIds
      responses:
        '200':
          description: Competitions associated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /players:
    post:
      tags:
        - Players
      summary: Create a new player
      operationId: createPlayer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerCreate'
      responses:
        '201':
          description: Player created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /teams/{teamId}/players:
    get:
      tags:
        - Teams
        - Players
      summary: Get a list of players in a team
      operationId: getPlayersInTeam
      parameters:
        - in: path
          name: teamId
          schema:
            type: integer
          required: true
          description: The ID of the team.
        - in: query
          name: page
          schema:
            type: integer
            example: 1
          required: true
          description: The page number for pagination.
        - in: query
          name: pageSize
          schema:
            type: integer
            example: 10
          required: true
          description: The number of records per page.
        - in: query
          name: playerName
          schema:
            type: string
          required: false
          description: Filter players by name.
        - in: query
          name: sortBy
          schema:
            type: string
            enum: [name, number, preferredFoot]
          required: false
          description: Sort players by a specified field.
      responses:
        '200':
          description: A paginated list of players
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlayers'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Teams
        - Players
      summary: Associate players with a team
      operationId: associatePlayersWithTeam
      parameters:
        - in: path
          name: teamId
          schema:
            type: integer
          required: true
          description: The ID of the team.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                playerIds:
                  type: array
                  items:
                    type: integer
              required:
                - playerIds
      responses:
        '200':
          description: Players associated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CompetitionCreate:
      type: object
      properties:
        name:
          type: string
        location:
          type: string
      required:
        - name
        - location

    Competition:
      allOf:
        - $ref: '#/components/schemas/CompetitionCreate'
        - type: object
          properties:
            id:
              type: integer
              readOnly: true

    TeamCreate:
      type: object
      properties:
        name:
          type: string
        slogan:
          type: string
      required:
        - name
        - slogan

    Team:
      allOf:
        - $ref: '#/components/schemas/TeamCreate'
        - type: object
          properties:
            id:
              type: integer
              readOnly: true
            competitions:
              type: array
              items:
                $ref: '#/components/schemas/Competition'
              readOnly: true
            players:
              type: array
              items:
                $ref: '#/components/schemas/Player'
              readOnly: true

    PlayerCreate:
      type: object
      properties:
        name:
          type: string
        number:
          type: integer
        preferredFoot:
          type: string
          enum:
            - Left
            - Right
      required:
        - name
        - number
        - preferredFoot

    Player:
      allOf:
        - $ref: '#/components/schemas/PlayerCreate'
        - type: object
          properties:
            id:
              type: integer
              readOnly: true

    PaginatedCompetitions:
      type: object
      properties:
        page:
          type: integer
        pageSize:
          type: integer
        totalPages:
          type: integer
        totalRecords:
          type: integer
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/Competition'

    PaginatedTeams:
      type: object
      properties:
        page:
          type: integer
        pageSize:
          type: integer
        totalPages:
          type: integer
        totalRecords:
          type: integer
        teams:
          type: array
          items:
            $ref: '#/components/schemas/Team'

    PaginatedPlayers:
      type: object
      properties:
        page:
          type: integer
        pageSize:
          type: integer
        totalPages:
          type: integer
        totalRecords:
          type: integer
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'

    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string